name: Browser Automation Tests

on: [push, pull_request]

env:
  PYTHON_VERSION: '3.11'
  PLAYWRIGHT_VERSION: '1.42.0'
  BROWSER_TYPE: 'chromium'
  HEADLESS: 'true'  # Force headless mode

jobs:
  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: cache-playwright
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgbm-dev \
            libnss3 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libdrm-dev \
            libxkbcommon-dev \
            libgtk-3-dev \
            libasound2 \
            xvfb  # Add X virtual framebuffer

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install playwright==${{ env.PLAYWRIGHT_VERSION }}
          
          if [ "${{ steps.cache-playwright.outputs.cache-hit }}" != 'true' ]; then
            python -m playwright install --with-deps ${{ env.BROWSER_TYPE }}
          fi

      - name: Run tests with Xvfb
        run: |
          mkdir -p reports screenshots
          # Start virtual display and run tests
          xvfb-run --auto-servernum -- python -m run_all
          
          # Verify reports
          if [ ! -f "test_report.json" ]; then
            echo "❌ Error: No JSON report generated"
            exit 1
          fi
          
          if [ -z "$(ls reports/*.html)" ]; then
            echo "❌ Error: No HTML report generated"
            exit 1
          fi

          echo "=== Test Summary ==="
          jq '.summary' test_report.json || cat test_report.json

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            reports/
            screenshots/
            test_report.json
          retention-days: 7