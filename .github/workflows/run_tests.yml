name: Browser Automation Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Match your local Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'pydantic>=2.10.4,<2.11.0'
          pip install langchain-google-genai
          pip install -r requirements.txt
          playwright install
          playwright install-deps

      - name: Verify environment
        run: |
          python --version
          playwright --version
          echo "Python path:"
          python -c "import sys; print('\n'.join(sys.path))"

      - name: Run tests
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          HEADLESS: "true"
        run: |
          # Create necessary directories
          mkdir -p reports
          mkdir -p screenshots
          
          # Debug: Show directory structure
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -R
          
          # Execute tests using your existing command
          python -m run_all
          
          # Verify test report was created
          if [ -f "test_report.json" ]; then
            echo "Test report exists:"
            cat test_report.json
          else
            echo "No test report found, creating empty one"
            echo '{"summary": {"total": 0, "passed": 0, "failed": 0}}' > test_report.json
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            reports/
            screenshots/
            test_report.json
          retention-days: 3